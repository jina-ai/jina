name: Manual Docker Build

on:
  workflow_dispatch:
    inputs:
      git_tag:
        description: 'The git tag version in x.y.z'
        required: true
      release_token:
        description: 'Your release token'
        required: true

jobs:
  token-check:
    runs-on: ubuntu-latest
    steps:
      - run: echo "success!"
        if: "${{ github.event.inputs.release_token }} == ${{ env.release_token }}"
        env:
          release_token: ${{ secrets.JINA_CORE_RELEASE_TOKEN }}

  regular-release:
    needs: token-check
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        tag_stage: [ "", "-devel", "-daemon" ]
        tag_pyversion: [ "-py37", "-py38" ]
    steps:
      - uses: actions/checkout@v2
        with:
          ref: "v${{ github.event.inputs.git_tag }}"
      - name: Set envs and versions
        run: |
          JINA_VERSION=${{ github.event.inputs.git_tag }}
          JINA_MINOR_VERSION=${JINA_VERSION%.*}
          echo "VCS_REF=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_ENV
          echo "JINA_VERSION=${JINA_VERSION}" >> $GITHUB_ENV
          echo "V_JINA_VERSION=v${{ github.event.inputs.git_tag }}" >> $GITHUB_ENV
          echo "JINA_MINOR_VERSION=${JINA_MINOR_VERSION}" >> $GITHUB_ENV

          if [[ "${{ matrix.tag_pyversion }}" == "-py38" ]]; then
            echo "PY_VERSION=3.8" >> $GITHUB_ENV
          else
            echo "PY_VERSION=3.7" >> $GITHUB_ENV
            echo "TAG_ALIAS=jinaai/jina:$JINA_VERSION${{ matrix.tag_stage }}" >> $GITHUB_ENV
          fi

          if [[ "${{ matrix.tag_stage }}" == "-daemon" ]]; then
            echo "BUILD_ARG=jina_daemon" >> $GITHUB_ENV
          elif [[ "${{ matrix.tag_stage }}" == "-devel" ]]; then
            echo "BUILD_ARG=jina_devel" >> $GITHUB_ENV
          else
            echo "BUILD_ARG=jina_base" >> $GITHUB_ENV
          fi
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_DEVBOT_USER }}
          password: ${{ secrets.DOCKERHUB_DEVBOT_TOKEN }}
      - run: |
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfiles/debianx.Dockerfile
          platforms: linux/armhf,linux/amd64,linux/arm/v6
          push: true
          tags: jinaai/jina:${{env.JINA_VERSION}}${{ matrix.tag_pyversion }}${{ matrix.tag_stage }}, ${{env.TAG_ALIAS}}
          build-args: BUILD_DATE, JINA_VERSION, VCS_REF, PY_VERSION
          target: ${{env.BUILD_ARG}}