name: Latency Tracking

on:
  - pull_request

jobs:
  lt-nth-releases:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        last_nth_release: [master, 1, 2]
    steps:
#      - name: Cancel Previous Runs
#        uses: styfle/cancel-workflow-action@0.9.0
#        with:
#          access_token: ${{ github.token }}
      - uses: actions/checkout@v2
      - name: Test docker install
        run: |
          docker build --build-arg PIP_TAG="[devel]" -f Dockerfiles/pip.Dockerfile -t jinaai/jina:master .
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Tracking latency of nth version
        run: |
          sudo rm -f .dockerignore
          sudo mkdir -p /var/output
          sudo apt-get install jq
          cd scripts/latency-tracking
          bash track.sh ${{ matrix.last_nth_release }}
      - name: Upload output
        uses: actions/upload-artifact@v2
        with:
          name: lt-${{ matrix.last_nth_release }}
          path: /var/output/
          if-no-files-found: error

  comment-on-pr:
    needs: lt-nth-releases
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          mkdir -p scripts/latency-tracking/output
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: lt-master
          path: scripts/latency-tracking/output
      - uses: actions/download-artifact@v2
        with:
          name: lt-1
          path: scripts/latency-tracking/output
      - uses: actions/download-artifact@v2
        with:
          name: lt-2
          path: scripts/latency-tracking/output
      - name: Display structure of downloaded files
        run: ls -R
        working-directory: scripts/latency-tracking/output
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: prepare comment
        run: |
          pip install packaging==21.0 prettytable==2.1.0
          cd scripts/latency-tracking
          python merge_outputs.py output stats.json
          python ppstat.py output/stats.json > comment.txt
      - id: get-comment-body
        run: |
          body=$(cat scripts/latency-tracking/comment.txt)
          body="${body//'%'/'%25'}"
          body="${body//$'\n'/'%0A'}"
          body="${body//$'\r'/'%0D'}"
          echo ::set-output name=body::$body
      - name: Find Comment
        uses: peter-evans/find-comment@v1
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: 'Backed by [latency-tracking]'

      - name: Create comment
        if: ${{ steps.fc.outputs.comment-id == 0 }}
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: ${{ steps.get-comment-body.outputs.body }}
          reaction-type: "eyes"
      - name: Update comment
        if: ${{ steps.fc.outputs.comment-id != 0 }}
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          body: ${{ steps.get-comment-body.outputs.body }}
          reaction-type: "rocket"
          edit-mode: replace